<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>forum-parent</artifactId>
        <groupId>com.jqh</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>forum-user</artifactId>
    <!--    用于maven加载mapper配置文件-->
    <build>
        <resources>
            <resource>
                <!--目标资源文件夹-->
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>*.properties</include>
                </includes>
                <!--剔除过滤器-->
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jqh</groupId>
            <artifactId>forum-common</artifactId>
        </dependency>
        <!--mysql数据库驱动-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!--通用mapper启动器-->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
        </dependency>
        <!--        引入pagehelper-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
        </dependency>
<!--        依赖rabbitmq-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
<!--        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
<!--        被下面的覆盖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- spring security/social/oauth -->
        <!-- 引用spring security、spring oauth核心 -->
<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-oauth2</artifactId>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; spring social &ndash;&gt;-->
<!--        &lt;!&ndash; 提供Java 配置 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.social</groupId>-->
<!--            <artifactId>spring-social-config</artifactId>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; 提供社交连接框架和OAuth 客户端支持 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.social</groupId>-->
<!--            <artifactId>spring-social-core</artifactId>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; 提供社交安全支持 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.social</groupId>-->
<!--            <artifactId>spring-social-security</artifactId>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; 管理web应用程序的连接 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.social</groupId>-->
<!--            <artifactId>spring-social-web</artifactId>-->
<!--        </dependency>-->
        <!--    依赖eureka客户端-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!--    ribbon做负载均衡-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
        </dependency>
        <!--    hystrix做服务降级及熔断处理-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <!--    使用feign进行更加优雅和简单的http rest服务调用-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <!--        配置文件服务的客户端依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <!--    实现不用重启服务器更新配置文件的依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-bus</artifactId>
        </dependency>
        <!--    使用rabbitmq作为消息总线使用的消息队列-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-rabbit</artifactId>
        </dependency>
        <!--        spring已经实现的监听器-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>

</project>